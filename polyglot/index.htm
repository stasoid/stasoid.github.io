<!doctype html>
<meta charset="utf-8">

<script src="tio.js"></script>
<script src="languages.js"></script>

<script>

var code;
var n_langs = langs.length-1; // total number of langs
var passed=0, failed=[], skipped=0;
var finished=0; // number of langs that finished testing, passed + failed + skipped

function run_lang(lang, onfinish)
{
	// indicates that this lang is either finished or being worked on, no need to run it again
	// (checked in onfinish when finding next lang to test)
	lang.processed = true;

	var arg = ""; //lang.arg ? readfile(lang.arg) : "";

	if(lang.type == "tio")
	{
		let t = lang.timeout || 3;
		let cmd = "cat>f\n" + "cat<<'.'>x\n" + lang.cmd + "\n.\n" + "timeout -k1 " + t + ' bash x "$1"';
		tio_run(lang.n, cmd, code, arg, onfinish);
	}
	else
	{
		skipped++;
		finished++;
		update_status();
	}
}

function trim_newlines(str)
{
	while(str.slice(-1) == '\n')
	{
		str = str.slice(0,-1);
		if(str.slice(-1) == '\r')
			str = str.slice(0,-1);
	}
	return str;
}

function onfinish(n, stdout, stderr, warnings)
{
	langs[n].result = [stdout, stderr, warnings];

	var result = trim_newlines(stdout);
	var expected_result = langs[n].stdout || n+"";

	if(result == expected_result)
		passed++;
	else {
		failed.push(n);
		// TO DO: do smth with stdout/stderr/warnings
	}
	finished++;
	update_status();

	if(finished == n_langs) // all langs are finished, nothing to do
		return;

	// find and run next untested lang
	var next = n+1;
	while(next != n_langs+1 && langs[next].processed)
		next++;
	if(next != n_langs+1)
		run_lang(langs[next], onfinish);
}

function run()
{
	code = editor.value;

	langs.forEach(lang => lang.processed = false);
	passed = skipped = finished = 0;
	failed = [];
	update_status();

	run_lang(langs[1], onfinish);
//	run_lang(langs[2], onfinish);
}

function update_status()
{
	$('#status').innerHTML = 
		finished+'/'+n_langs +
		' passed:'+passed +
		' skipped:'+skipped +
		' failed:'+failed.length+' '+failed.reduce((result,n) => result += langs[n].name+' ', '');
}

onload = function()
{
	// make buttons unfocusable, so they don't steal focus from the editor
	$$('button').forEach(btn=>btn.addEventListener("mousedown", evt=>evt.preventDefault()));
	update_status();
}

</script>


<body id=body>
  <!-- wrap=off https://stackoverflow.com/a/43259431 -->
  <textarea id=editor rows=28 cols=130 wrap=off spellcheck=false autofocus style="font:16pt Consolas">print(1)#i2</textarea>
  <div>
    <button onclick="run()" style="font:16pt Arial">run</button>&nbsp;&nbsp;&nbsp;
    <span id=status style="font:16pt Arial"></span>
  </div>
</body>
